/* src/App.module.css */

/*
  --- ESTILOS BASE (MÓVILES - Por defecto) ---
  Diseño en columna centrada con scroll vertical 
 

* {
  outline: 1px solid red;
}
   */
   * {
    outline: 1px solid rgba(255, 0, 0, 0.3);
    overflow: visible !important;
  }


.mainContainer {
 
  
  position: relative;

  background-color: var(--color-text-light);
  display: flex;
  flex-direction: column;
  border-radius: 10px;
  margin: 8px auto;
 
}

.heroSection {

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  padding: 1px 13px;
 
  
  box-sizing: border-box;
  background-color: var(--color-secondary);
  gap: 4px;
 

}
.leftColumnGrid{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 15px;
}
.column1{
  display: flex;
  flex-direction: column;
}
.rightColumnGrid { 
  position: relative;
 
}

.titleBlock {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
 
  margin-top: 0px;
 
  margin-bottom: 5px;
  
}


.avatarContainer {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  margin: -10px 0;
}


.subtitleBlock {
  
  display: inline-flex;
  justify-content: center;
  align-items: center;
  margin: 2px 0;
 
  font-size: 1.5rem;
  
   
}


.aiTerminalContainer {
  width: 100%;
  max-width: 280px;
  margin: 0 auto;
  padding: 27px 20px;
  margin: 0;
}

 
.manifestoBlock {
  width: 100%;
  max-width: 400px;
  
  text-align: center;
  font-size: 0.7em;
  line-height: 1.6;
  padding-left:20px;
  margin-top: 0;
}

.heroTitle,
.heroSubtitle {
  font-family: 'Inter', sans-serif;
  color: #fff;
  text-align: center;
  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
  margin-bottom: 10px;
}

.heroTitle {
  font-size: 1.9em;
  font-weight: 700;
}

.heroSubtitle {
  font-size: 0.9em;
  font-weight: 300;
  color: #ccc;
}

.heroDescription {
  font-size: 3em;
  font-weight: 400;
  color: #e0e0e0;
  margin-top: 1em;
  max-width: 90%;
  line-height: 1.6;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
  text-align: center;
}

.aiTerminalWrapper {
  display: block;
  width: 100%;
  max-width: 100px;
  margin: 30px auto;
  padding: 0 20px;
 
}
.skillAtomsContainer{
 
  
  width: 50px;
  height: 50px;
  position: absolute;
  top: 70px;
  right: 150px;
  
}

.skillAtomsAbsolute {
  width: 100%;
  max-width: 500px;
  margin: 30px auto;
  display: flex;
  justify-content: center;
  align-items: center;
  
  background-color: red;
}



.gearIcon {
  width: 100%;
  height: 100%;
  filter: drop-shadow(0 0 5px rgba(0, 170, 255, 0.7));
  transition: transform 0.3s ease;
}

.gearButton:hover .gearIcon {
  transform: rotate(30deg);
}

.gearButton:focus {
  outline: none;
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2000;
  backdrop-filter: blur(10px);
  padding: 20px;
  box-sizing: border-box;
}

.modalContent {
  position: relative;
  background-color: #1a1a1a;
  border-radius: 12px;
  padding: 15px;
  max-width: 95%;
  max-height: 90%;
  overflow-y: auto;
  color: #fff;
  border: 1px solid rgba(0, 170, 255, 0.3);
  box-shadow: 0 0 20px rgba(0, 170, 255, 0.2);
}

.closeButton {
  position: absolute;
  top: 15px;
  right: 15px;
  background: none;
  border: none;
  color: #fff;
  font-size: 2rem;
  cursor: pointer;
  transition: color 0.2s ease;
}

.closeButton:hover {
  color: #00c6ff;
}

.modalTitle {
  font-family: 'Inter', sans-serif;
  font-size: 1.8rem;
  font-weight: 700;
  text-align: center;
  color: #00c6ff;
  margin-bottom: 20px;
}

.projectsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 15px;
  justify-items: center;
}

.projectPoster {
  position: relative;
  width: 180px;
  height: 270px;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
  cursor: pointer;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.projectPoster:hover {
  transform: scale(1.05);
  box-shadow: 8px 12px 20px rgba(0, 170, 255, 0.3);
}

.posterImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.posterOverlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background: linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));
  padding: 15px 10px;
  box-sizing: border-box;
}

.posterTitle {
  font-family: 'Inter', sans-serif;
  font-size: 1.1rem;
  font-weight: 600;
  margin: 0;
  color: #fff;
}

.posterYear {
  font-family: 'Inter', sans-serif;
  font-size: 0.9rem;
  color: #ccc;
  margin: 5px 0 0;
}





/*
  --- MEDIA QUERY PARA TABLETS (min-width: 768px) ---
  Mantenemos el diseño en columna pero con mejor espaciado
*/

@media (min-width: 400px) {

  /* PASO 1: Establecer la grilla principal en .heroSection */
  
.mainContainer {
 
  
  position: relative;

  background-color: black;
  display: flex;
  flex-direction: column;
  
  margin: 20px ;
  
 
}
  .heroSection {
    display: grid;
    grid-template-rows: 1fr 1fr;

    
    padding: 0;
    max-width: 100%;
    margin: 10px 20px;
    
  }

  .leftColumnGrid {
    display: grid;
    grid-template-columns: 1fr 3fr; /* Crea dos columnas principales */
    gap: 0px; /* Espacio entre las columnas */
    align-items: flex-start; /* Evita que las columnas se estiren */
  }
  
  /* Contenedor para los dos primeros hijos */
  .column1 {
    display: flex;
    flex-direction: row; /* Apila los hijos uno al lado del otro */
    gap: 5px; /* Espacio entre el primer y segundo hijo */
    /* align-items: flex-start;  // Si es necesario */
  }
  
  /* Contenedor para los dos hijos restantes */
  .column2 {
    display: flex;
    flex-direction: column; /* Apila los hijos uno encima del otro */
    gap: 5px; /* Espacio entre el tercer y cuarto hijo */
    /* align-items: flex-start; // Si es necesario */
  }
  .aiTerminalContainer {
    grid-column: 2;
    width: 94%;
    max-width: 350px;
    margin: 0 auto;
    padding: 27px 20px;
    margin: 0;
    height: 300px;
  }
  .manifestoBlock {
    width: 100%;
    max-width: 300px;
    
    text-align: center;
    font-size: 0.7em;
    line-height: 1.6;
    padding-left:20px;
    grid-column: 2;
   
    height: 100px;
  }
  .skillAtomsContainer{
 
  
    width: 50px;
    height: 50px;
    position: absolute;
    top: 50px;
    right: 200px;
    
    
  }

  .rightColumnGrid { 
   
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /*background-color: green;
     Aseguramos que ocupe todo el espacio disponible */
    height: 45%;
    width: 100%;
    position: relative;

  }

  /* PASO 3: Reorganiza tu App.jsx para usar estos contenedores */
  /* Debes envolver los elementos de la izquierda y de la derecha en los divs */

  /* Ahora, los estilos para cada elemento */

  /* Estilos para el texto vertical */
  .titleBlock {
    
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    /*background-color: #377555;
     Eliminamos el 'width: 20px;' para que se ajuste al texto */
  }

  .heroTitle,
  .heroSubtitle {
    /* Usamos el subtítulo también si lo quieres en vertical */
    writing-mode: vertical-rl;
    transform: rotate(180deg);
    
  }

  .heroTitle {
    font-size: 2.9em;
    font-weight: 700;
  }
  .heroSubtitle {
    
    font-size: 1em;
    font-weight: 200;
  }


  /* Estilos para los componentes en cada columna */


  .avatarContainer {
    /* Quita el margin-right que tenías */
   /*  background-color: red;
    Tu color de prueba */
    position: relative;



  }

  


  /* ... y así con los demás elementos ... */
}


@media (min-width: 650px) {
  .mainContainer {
 
  
    position: relative;
  
    background-color: black;
    display: flex;
    flex-direction: column;
    
    margin: 40px ;
    
   
  }
    .heroSection {
      display: grid;
      grid-template-rows: 1fr 1fr;
  
      
      padding: 0;
      max-width: 100%;
      margin: 10px 20px;
      
    }
    .heroTitle {
      font-size: 3em;
      font-weight: 700;
    }
    .heroSubtitle {
      
      font-size: 1em;
      font-weight: 200;
    }
    .manifestoBlock {
      width: 100%;
      max-width: 350px;
      
      text-align: center;
      font-size: 0.85em;
      line-height: 1.6;
      padding-left:20px;
      grid-column: 2;
     
      height: 100px;
    }
}


/*
  --- MEDIA QUERY PARA ESCRITORIO GRANDE (min-width: 1024px) ---
  Mejoramos el espaciado para pantallas grandes
*/


@media (min-width: 1024px) {

  /* PASO 1: Establecer la grilla principal en .heroSection */
  
.mainContainer {
 
  
  position: relative;

  background-color: black;
  display: flex;
  flex-direction: column;
  
  margin: 5px auto;
  
 
}
  .heroSection {
    display: grid;
    /* Dividimos la pantalla en dos columnas iguales */
    grid-template-columns: 2fr 1fr;
    min-height: 95vh;
    padding: 0;
    max-width: 80%;
    margin: 10px auto;
    
  }

  .leftColumnGrid {
    display: grid;
    grid-template-columns: 1fr 3fr; /* Crea dos columnas principales */
    gap: 20px; /* Espacio entre las columnas */
    align-items: flex-start; /* Evita que las columnas se estiren */
    margin-top: 90px;
  }
  
  /* Contenedor para los dos primeros hijos */
  .column1 {
    display: flex;
    flex-direction: row; /* Apila los hijos uno al lado del otro */
    gap: 10px; /* Espacio entre el primer y segundo hijo */
    /* align-items: flex-start;  // Si es necesario */
  }
  
  /* Contenedor para los dos hijos restantes */
  .column2 {
    display: flex;
    flex-direction: column; /* Apila los hijos uno encima del otro */
    gap: 10px; /* Espacio entre el tercer y cuarto hijo */
    /* align-items: flex-start; // Si es necesario */
  }
  .aiTerminalContainer {
    grid-column: 2;
    width: 100%;
    max-width: 420px;
    margin: 0 auto;
    padding: 27px 20px;
    margin: 0;
    height: 300px;
   
  }
  .manifestoBlock {
    width: 100%;
    max-width: 420px;
    
    text-align: center;
    font-size: 1em;
    line-height: 1.6;
    padding-left:20px;
    grid-column: 2;
   
    height: 100px;
  }
  .skillAtomsContainer{
 
  
    width: 50px;
    height: 50px;
    position: absolute;
    top: 50px;
    right: 200px;
    
    
  }

  .rightColumnGrid { 
    grid-column: 2 / 3;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /*background-color: green;
     Aseguramos que ocupe todo el espacio disponible */
    height: 45%;
    width: 100%;
    position: relative;

  }

  /* PASO 3: Reorganiza tu App.jsx para usar estos contenedores */
  /* Debes envolver los elementos de la izquierda y de la derecha en los divs */

  /* Ahora, los estilos para cada elemento */

  /* Estilos para el texto vertical */
  .titleBlock {
    
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    /*background-color: #377555;
     Eliminamos el 'width: 20px;' para que se ajuste al texto */
  }
  .subtitleBlock {
    
  }

  .heroTitle,
  .heroSubtitle {
    /* Usamos el subtítulo también si lo quieres en vertical */
    writing-mode: vertical-rl;
    transform: rotate(180deg);
    
  }

  .heroTitle {
    font-size: 3em;
    font-weight: 700;
  }
  .heroSubtitle {
    
    font-size: 1em;
    font-weight: 100;
  }


  /* Estilos para los componentes en cada columna */


  .avatarContainer {
    /* Quita el margin-right que tenías */
   /*  background-color: red;
    Tu color de prueba */
    position: relative;



  }

  


  /* ... y así con los demás elementos ... */
}